openapi: 3.0.3
info:
  title: STD24062
  description: This is a specification of STD24001
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
paths:
  /ping:
    get:
      summary: Ping the server
      operationId: ping
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: pong
  /cars:
    post:
      summary: Create a new car
      operationId: createCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Car with this identifier already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get all cars
      operationId: getCars
      responses:
        '200':
          description: List of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
  /cars/{id}:
    get:
      summary: Get a car by ID
      operationId: getCarById
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Car found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cars/{id}/characteristics:
    put:
      summary: Update car characteristics
      operationId: updateCarCharacteristics
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Characteristic'
      responses:
        '200':
          description: Car characteristics updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Characteristic:
      type: object
      required:
        - max_speed
        - max_fuel_capacity
      properties:
        max_speed:
          type: number
          format: float
          example: 200.5
        max_fuel_capacity:
          type: number
          format: float
          example: 60.0
    Car:
      type: object
      required:
        - identifier
        - brand
        - model
        - characteristics
      properties:
        identifier:
          type: string
          example: CAR123
        brand:
          type: string
          example: Toyota
        model:
          type: string
          example: Camry
        characteristics:
          $ref: '#/components/schemas/Characteristic'
    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          example: Car with id CAR123 not found